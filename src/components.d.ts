/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ArrowPositions, GeneralHierarchies, GeneralSizes, StateEnum } from "./models/reusableModels";
export { ArrowPositions, GeneralHierarchies, GeneralSizes, StateEnum } from "./models/reusableModels";
export namespace Components {
    interface ButtonClose {
        "color": 'primary' | 'information' | 'success' | 'gray' | 'warning' | 'error';
        "size": GeneralSizes;
    }
    interface ButtonCta {
        "disabled": boolean;
        "hierarchy": GeneralHierarchies;
        "leftIcon"?: string;
        "rightIcon"?: string;
        "size": GeneralSizes;
    }
    interface CollapseButton {
        "currentIconDirection": string;
        "isHovered": boolean;
    }
    interface NotificationBell {
        "state": StateEnum;
    }
    interface ToggleButton {
        "size": GeneralSizes;
        "state": StateEnum;
    }
    interface ToolTip {
        "arrowPosition": ArrowPositions;
        "supportingText": boolean;
    }
}
declare global {
    interface HTMLButtonCloseElement extends Components.ButtonClose, HTMLStencilElement {
    }
    var HTMLButtonCloseElement: {
        prototype: HTMLButtonCloseElement;
        new (): HTMLButtonCloseElement;
    };
    interface HTMLButtonCtaElement extends Components.ButtonCta, HTMLStencilElement {
    }
    var HTMLButtonCtaElement: {
        prototype: HTMLButtonCtaElement;
        new (): HTMLButtonCtaElement;
    };
    interface HTMLCollapseButtonElement extends Components.CollapseButton, HTMLStencilElement {
    }
    var HTMLCollapseButtonElement: {
        prototype: HTMLCollapseButtonElement;
        new (): HTMLCollapseButtonElement;
    };
    interface HTMLNotificationBellElement extends Components.NotificationBell, HTMLStencilElement {
    }
    var HTMLNotificationBellElement: {
        prototype: HTMLNotificationBellElement;
        new (): HTMLNotificationBellElement;
    };
    interface HTMLToggleButtonElement extends Components.ToggleButton, HTMLStencilElement {
    }
    var HTMLToggleButtonElement: {
        prototype: HTMLToggleButtonElement;
        new (): HTMLToggleButtonElement;
    };
    interface HTMLToolTipElement extends Components.ToolTip, HTMLStencilElement {
    }
    var HTMLToolTipElement: {
        prototype: HTMLToolTipElement;
        new (): HTMLToolTipElement;
    };
    interface HTMLElementTagNameMap {
        "button-close": HTMLButtonCloseElement;
        "button-cta": HTMLButtonCtaElement;
        "collapse-button": HTMLCollapseButtonElement;
        "notification-bell": HTMLNotificationBellElement;
        "toggle-button": HTMLToggleButtonElement;
        "tool-tip": HTMLToolTipElement;
    }
}
declare namespace LocalJSX {
    interface ButtonClose {
        "color"?: 'primary' | 'information' | 'success' | 'gray' | 'warning' | 'error';
        "size"?: GeneralSizes;
    }
    interface ButtonCta {
        "disabled"?: boolean;
        "hierarchy"?: GeneralHierarchies;
        "leftIcon"?: string;
        "rightIcon"?: string;
        "size"?: GeneralSizes;
    }
    interface CollapseButton {
        "currentIconDirection"?: string;
        "isHovered"?: boolean;
    }
    interface NotificationBell {
        "state"?: StateEnum;
    }
    interface ToggleButton {
        "size"?: GeneralSizes;
        "state"?: StateEnum;
    }
    interface ToolTip {
        "arrowPosition"?: ArrowPositions;
        "supportingText"?: boolean;
    }
    interface IntrinsicElements {
        "button-close": ButtonClose;
        "button-cta": ButtonCta;
        "collapse-button": CollapseButton;
        "notification-bell": NotificationBell;
        "toggle-button": ToggleButton;
        "tool-tip": ToolTip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "button-close": LocalJSX.ButtonClose & JSXBase.HTMLAttributes<HTMLButtonCloseElement>;
            "button-cta": LocalJSX.ButtonCta & JSXBase.HTMLAttributes<HTMLButtonCtaElement>;
            "collapse-button": LocalJSX.CollapseButton & JSXBase.HTMLAttributes<HTMLCollapseButtonElement>;
            "notification-bell": LocalJSX.NotificationBell & JSXBase.HTMLAttributes<HTMLNotificationBellElement>;
            "toggle-button": LocalJSX.ToggleButton & JSXBase.HTMLAttributes<HTMLToggleButtonElement>;
            "tool-tip": LocalJSX.ToolTip & JSXBase.HTMLAttributes<HTMLToolTipElement>;
        }
    }
}
